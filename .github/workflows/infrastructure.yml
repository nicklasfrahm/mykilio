name: infrastructure

on:
  push:
    branches:
      - main
    paths:
      - deployments/infrastructure/**
      - .github/workflows/infrastructure.yml
    tags:
      - v*
  pull_request:
    branches:
      - main
    paths:
      - deployments/infrastructure/**
      - .github/workflows/infrastructure.yml
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  k3s:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    environment:
      name: infrastructure
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Deploy k3s
        uses: appleboy/ssh-action@master
        with:
          script_stop: true
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.SSH_TARGET_HOST }}
          fingerprint: ${{ secrets.SSH_TARGET_FINGERPRINT }}
          proxy_username: ${{ secrets.SSH_USER }}
          proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
          proxy_host: ${{ secrets.SSH_PROXY_HOST }}
          proxy_fingerprint: ${{ secrets.SSH_PROXY_FINGERPRINT }}
          script: |
            curl -sfL https://get.k3s.io | sudo sh -s - \
              --advertise-address $(host -t a ${{ secrets.SSH_PROXY_HOST }} | cut -d ' ' -f4) \
              --tls-san ${{ secrets.SSH_PROXY_HOST }} \
              --disable traefik \
              --write-kubeconfig-mode 644 \
              --selinux
            sudo cp -f /etc/rancher/k3s/k3s.yaml /home/${{ secrets.SSH_USER }}/.kube/config
            sudo chown ${{ secrets.SSH_USER }}:${{ secrets.SSH_USER }} /home/${{ secrets.SSH_USER }}/.kube/config
            sudo chmod 600 /home/${{ secrets.SSH_USER }}/.kube/config

      - name: Download kubeconfig
        uses: nicklasfrahm/scp-action@main
        with:
          direction: download
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.SSH_TARGET_HOST }}
          fingerprint: ${{ secrets.SSH_TARGET_FINGERPRINT }}
          proxy_username: ${{ secrets.SSH_USER }}
          proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
          proxy_host: ${{ secrets.SSH_PROXY_HOST }}
          proxy_fingerprint: ${{ secrets.SSH_PROXY_FINGERPRINT }}
          source: /etc/rancher/k3s/k3s.yaml
          target: kubeconfig.yml

      - name: Adjust API server URL
        run: sed -i s/127.0.0.1/${{ secrets.SSH_PROXY_HOST }}/g kubeconfig.yml

      - name: Create kubeconfig secret
        uses: nicklasfrahm/file-secret-action@main
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          scope: ${{ github.repository }}
          secret: KUBECONFIG
          file: kubeconfig.yml

  traefik:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs:
      - k3s
    environment:
      name: infrastructure
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Install helm
        uses: azure/setup-helm@v1

      - name: Set up kubeconfig
        run: |
          mkdir -m 700 -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Install traefik
        run: |
          kubectl create namespace traefik || true
          helm repo add traefik https://helm.traefik.io/traefik
          helm repo update
          helm upgrade traefik traefik/traefik --atomic -i -n traefik -f deployments/infrastructure/traefik-values.yml

  cert-manager:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs:
      - k3s
    environment:
      name: infrastructure
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Install helm
        uses: azure/setup-helm@v1

      - name: Set up kubeconfig
        run: |
          mkdir -m 700 -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Install cert-manager
        run: |
          kubectl create namespace cert-manager || true
          helm repo add jetstack https://charts.jetstack.io
          helm repo update
          helm upgrade \
            --install \
            --atomic \
            --namespace cert-manager \
            --set installCRDs=true \
            cert-manager jetstack/cert-manager
          kubectl apply -f deployments/infrastructure/cert-manager-manifests.yml

  # The main point of this job is to synchronize the state
  # of the deployment in GitHub. In the future we could
  # set up some actual tests to evaluate the cluster health.
  test:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs:
      - traefik
      - cert-manager
    environment:
      name: infrastructure
    steps:
      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Set up kubeconfig
        run: |
          mkdir -m 700 -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Display nodes and node load
        run: |
          kubectl get nodes
          kubectl top nodes
